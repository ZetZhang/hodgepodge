!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
$(VERBOSE).SILENT	build/Makefile	/^$(VERBOSE).SILENT:$/;"	t
ARCHITECTURE_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
BLACK	color.h	/^        BLACK,$/;"	e	enum:hdgd::Color::FontColor	access:public
BLACK_BACK	color.h	/^        BLACK_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
BLUE	color.h	/^        BLUE,$/;"	e	enum:hdgd::Color::FontColor	access:public
BLUE_BACK	color.h	/^        BLUE_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
BackgroundColor	color.h	/^    enum class BackgroundColor {$/;"	g	struct:hdgd::Color	access:public
BackgroundColorCode	color.cpp	/^static const char* BackgroundColorCode[static_cast<unsigned int>(Color::BackgroundColor::NUM_BAC/;"	v	namespace:hdgd	typeref:typename:const char * []	file:
CMAKE_AR	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_AR	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/ichheit\/ich\/hodgepodge\/logging\/build$/;"	m
CMAKE_BUILD_TYPE	CMakeLists.txt	/^set(CMAKE_BUILD_TYPE "Debug")$/;"	v
CMAKE_C11_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")$/;"	v
CMAKE_C90_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")$/;"	v
CMAKE_C99_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMPILER_IS_CYGWIN	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_CYGWIN	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_GNUCC	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCC 1)$/;"	v
CMAKE_COMPILER_IS_GNUCXX	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX 1)$/;"	v
CMAKE_COMPILER_IS_MINGW	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_COMPILER_IS_MINGW	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_CROSSCOMPILING	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX20_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "\/usr\/bin\/c++")$/;"	v
CMAKE_CXX_COMPILER_ABI	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "ELF")$/;"	v
CMAKE_CXX_COMPILER_AR	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "\/usr\/bin\/gcc-ar")$/;"	v
CMAKE_CXX_COMPILER_ARG1	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_FRONTEND_VARIANT	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_LOADED	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib")$/;"	v
CMAKE_CXX_COMPILER_VERSION	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "9.2.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_FLAGS	CMakeLists.txt	/^set(CMAKE_CXX_FLAGS "-g -Wall")$/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/include\/c++\/9.2.0;\/usr\/include\/c++\/9.2./;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/9.2.0;\/usr\/lib;/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Linux")$/;"	v
CMAKE_CXX_SIMULATE_ID	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_ABI_COMPILED	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_ABI_COMPILED TRUE)$/;"	v
CMAKE_C_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_C_COMPILER	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER "\/usr\/bin\/cc")$/;"	v
CMAKE_C_COMPILER_ABI	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ABI "ELF")$/;"	v
CMAKE_C_COMPILER_AR	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_AR "\/usr\/bin\/gcc-ar")$/;"	v
CMAKE_C_COMPILER_ARG1	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARG1 "")$/;"	v
CMAKE_C_COMPILER_ENV_VAR	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ENV_VAR "CC")$/;"	v
CMAKE_C_COMPILER_FRONTEND_VARIANT	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_C_COMPILER_ID	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID_RUN	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID_RUN 1)$/;"	v
CMAKE_C_COMPILER_LOADED	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LOADED 1)$/;"	v
CMAKE_C_COMPILER_RANLIB	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib")$/;"	v
CMAKE_C_COMPILER_VERSION	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION "9.2.0")$/;"	v
CMAKE_C_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_C_COMPILER_WORKS	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WORKS TRUE)$/;"	v
CMAKE_C_COMPILER_WRAPPER	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WRAPPER "")$/;"	v
CMAKE_C_COMPILE_FEATURES	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macr/;"	v
CMAKE_C_IGNORE_EXTENSIONS	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/9.2.0\/include;\//;"	v
CMAKE_C_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/9.2.0;\/usr\/lib;\//;"	v
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_C_LINKER_PREFERENCE	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_PREFERENCE 10)$/;"	v
CMAKE_C_PLATFORM_ID	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_PLATFORM_ID "Linux")$/;"	v
CMAKE_C_SIMULATE_ID	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_ID "")$/;"	v
CMAKE_C_SIMULATE_VERSION	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_VERSION "")$/;"	v
CMAKE_C_SIZEOF_DATA_PTR	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_C_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)$/;"	v
CMAKE_C_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_GENERATOR	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPEND_INFO_FILES	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPEND_INFO_FILES$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_HOST_SYSTEM	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Linux-5.3.18-1-MANJARO")$/;"	v
CMAKE_HOST_SYSTEM_NAME	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Linux")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "5.3.18-1-MANJARO")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_MAKEFILE_DEPENDS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_DEPENDS$/;"	v
CMAKE_MAKEFILE_OUTPUTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_OUTPUTS$/;"	v
CMAKE_MAKEFILE_PRODUCTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_PRODUCTS$/;"	v
CMAKE_MT	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_MT	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/ichheit\/ich\/hodgepodge\/logging\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/ichheit\/ich\/hodgepodge\/logging")$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/ichheit\/ich\/hodgepodge\/logging$/;"	m
CMAKE_SYSTEM	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Linux-5.3.18-1-MANJARO")$/;"	v
CMAKE_SYSTEM_LOADED	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Linux")$/;"	v
CMAKE_SYSTEM_PROCESSOR	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_SYSTEM_VERSION	build/CMakeFiles/3.16.4/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "5.3.18-1-MANJARO")$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
COMPILER_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CXX_STD	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#      define CXX_STD /;"	d	file:
CXX_STD	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD /;"	d	file:
CXX_STD	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD /;"	d	file:
CYGWIN	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
CYGWIN	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
C_DIALECT	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT /;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT$/;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define C_DIALECT /;"	d	file:
Color	color.h	/^struct Color$/;"	s	namespace:hdgd
Color::portion	color.cpp	/^const std::pair<const char*, const char*> Color::portion(Color::FontColor front, Color::Backgrou/;"	f	class:Color	typeref:typename:const std::pair<const char *,const char * >	signature:(Color::FontColor front,Color::BackgroundColor back)
ColorStr	color.h	/^    ColorStr() : _data() {}$/;"	f	class:hdgd::ColorStr	access:public	signature:()
ColorStr	color.h	/^    ColorStr(const char *buf) : _data(buf) {}$/;"	f	class:hdgd::ColorStr	access:public	signature:(const char * buf)
ColorStr	color.h	/^    ColorStr(const std::string &buf) : _data(buf) {}$/;"	f	class:hdgd::ColorStr	access:public	signature:(const std::string & buf)
ColorStr	color.h	/^class ColorStr : public NonCopy$/;"	c	namespace:hdgd	inherits:NonCopy
DEBUG	logging.h	/^        DEBUG,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
DEC	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:	signature:(n)
DEC	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:	signature:(n)
EO_BUF_SIZE	prompt.h	/^static const size_t EO_BUF_SIZE = 500;$/;"	v	typeref:typename:const size_t
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
ERROR	logging.h	/^        ERROR,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
FATAL	logging.h	/^        FATAL,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
FontColor	color.h	/^    enum class FontColor {$/;"	g	struct:hdgd::Color	access:public
FontColorCode	color.cpp	/^static const char* FontColorCode[static_cast<unsigned int>(Color::FontColor::NUM_FONT_COLOR)] = /;"	v	namespace:hdgd	typeref:typename:const char * []	file:
GREEN	color.h	/^        GREEN,$/;"	e	enum:hdgd::Color::FontColor	access:public
GREEN_BACK	color.h	/^        GREEN_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
HEX	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:	signature:(n)
HEX	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:	signature:(n)
ID_VOID_MAIN	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
INFO	logging.h	/^        INFO,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
LogLevel	logging.h	/^    enum class LogLevel$/;"	g	class:hdgd::Logger	access:public
LogLevelName	logging.cpp	/^const char* LogLevelName[static_cast<unsigned int>(Logger::LogLevel::NUM_LOG_LEVEL)] = {$/;"	v	namespace:hdgd	typeref:typename:const char * []
Logger	logging.h	/^    Logger() {}$/;"	f	class:hdgd::Logger	access:public	signature:()
Logger	logging.h	/^class Logger {$/;"	c	namespace:hdgd
MINGW	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^  set(MINGW 1)$/;"	v
MINGW	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^  set(MINGW 1)$/;"	v
NONE	color.h	/^        NONE,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
NORETURN	prompt.h	/^#define NORETURN /;"	d
NUM_BACKGROUND_COLOR	color.h	/^        NUM_BACKGROUND_COLOR,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
NUM_FONT_COLOR	color.h	/^        NUM_FONT_COLOR,$/;"	e	enum:hdgd::Color::FontColor	access:public
NUM_LOG_LEVEL	logging.h	/^        NUM_LOG_LEVEL,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
NonCopy	noncopy.h	/^    NonCopy() = default;$/;"	p	class:hdgd::NonCopy	access:protected	signature:()
NonCopy	noncopy.h	/^    NonCopy(const NonCopy &) = delete;$/;"	p	class:hdgd::NonCopy	access:public	signature:(const NonCopy &)
NonCopy	noncopy.h	/^class NonCopy$/;"	c	namespace:hdgd
PLATFORM_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
PURPLE	color.h	/^        PURPLE,$/;"	e	enum:hdgd::Color::FontColor	access:public
PURPLE_BACK	color.h	/^        PURPLE_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
Prompt	prompt.h	/^class Prompt$/;"	c	namespace:hdgd
Prompt::_ExitPrompt	prompt.cpp	/^void Prompt::_ExitPrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
Prompt::exitPrompt	prompt.cpp	/^void Prompt::exitPrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
Prompt::exitPromptEN	prompt.cpp	/^void Prompt::exitPromptEN(int errn, const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(int errn,const char * format,...)
Prompt::fatalPrompt	prompt.cpp	/^void Prompt::fatalPrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
Prompt::msgPrompt	prompt.cpp	/^void Prompt::msgPrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
Prompt::usagePrompt	prompt.cpp	/^void Prompt::usagePrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
RED	color.h	/^        RED,$/;"	e	enum:hdgd::Color::FontColor	access:public
RED_BACK	color.h	/^        RED_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SKYBLUE	color.h	/^        SKYBLUE,$/;"	e	enum:hdgd::Color::FontColor	access:public
SKYBLUE_BACK	color.h	/^        SKYBLUE_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
STRINGIFY	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:	signature:(X)
STRINGIFY	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:	signature:(X)
STRINGIFY_HELPER	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:	signature:(X)
STRINGIFY_HELPER	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:	signature:(X)
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
T	what.hh	/^class T$/;"	c
T::test	what.hh	/^    void test(char *s) {$/;"	f	class:T	typeref:typename:void	access:public	signature:(char * s)
T::test	what.hh	/^    void test(std::string s) {$/;"	f	class:T	typeref:typename:void	access:public	signature:(std::string s)
TRACE	logging.h	/^        TRACE,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
TT	what.hh	/^class TT$/;"	c
TT::buffer	what.hh	/^    char buffer[SIZ + 5];$/;"	m	class:TT	typeref:typename:char[]	access:private
TT::op	what.hh	/^    static void op() {$/;"	f	class:TT	typeref:typename:void	access:public	signature:()
TT::operator ()	what.hh	/^    int operator()() {$/;"	f	class:TT	typeref:typename:int	access:public	signature:()
TT::operator ()	what.hh	/^    void operator()(int i) {$/;"	f	class:TT	typeref:typename:void	access:public	signature:(int i)
TT::size	what.hh	/^    size_t size() {$/;"	f	class:TT	typeref:typename:size_t	access:public	signature:()
TTT	what.hh	/^    TTT() : temp("fuck") { if (!strlen(temp)) std::cout << "fuck" << std::endl; }$/;"	f	class:TTT	access:public	signature:()
TTT	what.hh	/^class TTT$/;"	c
TTT::TTT	what.hh	/^    TTT() : temp("fuck") { if (!strlen(temp)) std::cout << "fuck" << std::endl; }$/;"	f	class:TTT	access:public	signature:()
TTT::operator ()	what.hh	/^    int operator()(int i) {$/;"	f	class:TTT	typeref:typename:int	access:public	signature:(int i)
TTT::temp	what.hh	/^    char temp[10];$/;"	m	class:TTT	typeref:typename:char[10]	access:private
UNIX	build/CMakeFiles/3.16.4/CMakeCCompiler.cmake	/^  set(UNIX 1)$/;"	v
UNIX	build/CMakeFiles/3.16.4/CMakeCXXCompiler.cmake	/^  set(UNIX 1)$/;"	v
WARN	logging.h	/^        WARN,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
WHITE	color.h	/^        WHITE,$/;"	e	enum:hdgd::Color::FontColor	access:public
WHITE_BACK	color.h	/^        WHITE_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
YELLOW	color.h	/^        YELLOW,$/;"	e	enum:hdgd::Color::FontColor	access:public
YELLOW_BACK	color.h	/^        YELLOW_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
_ExitPrompt	prompt.cpp	/^void Prompt::_ExitPrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
_ExitPrompt	prompt.h	/^    static void _ExitPrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
__COLOR_H__	color.h	/^#define __COLOR_H__$/;"	d
__LOGGING_H__	logging.h	/^#define __LOGGING_H__$/;"	d
__NONCOPY_H__	noncopy.h	/^#define __NONCOPY_H__$/;"	d
__PROMPT_H__	prompt.h	/^#define __PROMPT_H__$/;"	d
__outputPrompt	prompt.cpp	/^static void __outputPrompt(bool useErr, int errn, const std::string format, va_list ap) {$/;"	f	namespace:hdgd	typeref:typename:void	file:	signature:(bool useErr,int errn,const std::string format,va_list ap)
__terminate	prompt.cpp	/^static void __terminate(bool useExit) {$/;"	f	namespace:hdgd	typeref:typename:void	file:	signature:(bool useExit)
_data	color.h	/^    char _data[SIZE];$/;"	m	class:hdgd::ColorStr	typeref:typename:char[]	access:private
all	build/Makefile	/^all: cmake_check_build_system$/;"	t
buffer	what.hh	/^    char buffer[SIZ + 5];$/;"	m	class:TT	typeref:typename:char[]	access:private
clean	build/Makefile	/^clean:$/;"	t
clean/fast	build/Makefile	/^clean\/fast: clean$/;"	t
cmake_check_build_system	build/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	build/Makefile	/^cmake_force:$/;"	t
color.i	build/Makefile	/^color.i:$/;"	t
color.o	build/Makefile	/^color.o:$/;"	t
color.s	build/Makefile	/^color.s:$/;"	t
conn	what.hh	/^#define conn(/;"	d	signature:(A,B)
const	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
default_target	build/Makefile	/^default_target: all$/;"	t
depend	build/Makefile	/^depend:$/;"	t
edit_cache	build/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	build/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
exitPrompt	prompt.cpp	/^void Prompt::exitPrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
exitPrompt	prompt.h	/^    static void exitPrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
exitPromptEN	prompt.cpp	/^void Prompt::exitPromptEN(int errn, const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(int errn,const char * format,...)
exitPromptEN	prompt.h	/^    static void exitPromptEN(int errn, const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(int errn,const char * format,...)
fatalPrompt	prompt.cpp	/^void Prompt::fatalPrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
fatalPrompt	prompt.h	/^    static void fatalPrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
fromString	color.h	/^    std::string fromString() {$/;"	f	class:hdgd::ColorStr	typeref:typename:std::string	access:public	signature:()
hdgd	color.cpp	/^namespace hdgd$/;"	n	file:
hdgd	color.h	/^namespace hdgd$/;"	n
hdgd	logging.cpp	/^namespace hdgd$/;"	n	file:
hdgd	logging.h	/^namespace hdgd$/;"	n
hdgd	noncopy.h	/^namespace hdgd$/;"	n
hdgd	prompt.cpp	/^namespace hdgd$/;"	n	file:
hdgd	prompt.h	/^namespace hdgd$/;"	n
hdgd::BackgroundColorCode	color.cpp	/^static const char* BackgroundColorCode[static_cast<unsigned int>(Color::BackgroundColor::NUM_BAC/;"	v	namespace:hdgd	typeref:typename:const char * []	file:
hdgd::Color	color.h	/^struct Color$/;"	s	namespace:hdgd
hdgd::Color::BLACK	color.h	/^        BLACK,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::BLACK_BACK	color.h	/^        BLACK_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::BLUE	color.h	/^        BLUE,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::BLUE_BACK	color.h	/^        BLUE_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::BackgroundColor	color.h	/^    enum class BackgroundColor {$/;"	g	struct:hdgd::Color	access:public
hdgd::Color::FontColor	color.h	/^    enum class FontColor {$/;"	g	struct:hdgd::Color	access:public
hdgd::Color::GREEN	color.h	/^        GREEN,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::GREEN_BACK	color.h	/^        GREEN_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::NONE	color.h	/^        NONE,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::NUM_BACKGROUND_COLOR	color.h	/^        NUM_BACKGROUND_COLOR,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::NUM_FONT_COLOR	color.h	/^        NUM_FONT_COLOR,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::PURPLE	color.h	/^        PURPLE,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::PURPLE_BACK	color.h	/^        PURPLE_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::RED	color.h	/^        RED,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::RED_BACK	color.h	/^        RED_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::SKYBLUE	color.h	/^        SKYBLUE,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::SKYBLUE_BACK	color.h	/^        SKYBLUE_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::WHITE	color.h	/^        WHITE,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::WHITE_BACK	color.h	/^        WHITE_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::YELLOW	color.h	/^        YELLOW,$/;"	e	enum:hdgd::Color::FontColor	access:public
hdgd::Color::YELLOW_BACK	color.h	/^        YELLOW_BACK,$/;"	e	enum:hdgd::Color::BackgroundColor	access:public
hdgd::Color::portion	color.h	/^    static const std::pair<const char*, const char*> portion(Color::FontColor front, Color::Back/;"	p	struct:hdgd::Color	typeref:typename:const std::pair<const char *,const char * >	access:public	signature:(Color::FontColor front,Color::BackgroundColor back)
hdgd::ColorStr	color.h	/^class ColorStr : public NonCopy$/;"	c	namespace:hdgd	inherits:NonCopy
hdgd::ColorStr::ColorStr	color.h	/^    ColorStr() : _data() {}$/;"	f	class:hdgd::ColorStr	access:public	signature:()
hdgd::ColorStr::ColorStr	color.h	/^    ColorStr(const char *buf) : _data(buf) {}$/;"	f	class:hdgd::ColorStr	access:public	signature:(const char * buf)
hdgd::ColorStr::ColorStr	color.h	/^    ColorStr(const std::string &buf) : _data(buf) {}$/;"	f	class:hdgd::ColorStr	access:public	signature:(const std::string & buf)
hdgd::ColorStr::_data	color.h	/^    char _data[SIZE];$/;"	m	class:hdgd::ColorStr	typeref:typename:char[]	access:private
hdgd::ColorStr::fromString	color.h	/^    std::string fromString() {$/;"	f	class:hdgd::ColorStr	typeref:typename:std::string	access:public	signature:()
hdgd::ColorStr::operator ()	color.h	/^    const std::string operator()(const char *buf, Color::FontColor front, Color::BackgroundColor/;"	f	class:hdgd::ColorStr	typeref:typename:const std::string	access:public	signature:(const char * buf,Color::FontColor front,Color::BackgroundColor back)
hdgd::ColorStr::toString	color.h	/^    const std::string toString(Color::FontColor front, Color::BackgroundColor back) {$/;"	f	class:hdgd::ColorStr	typeref:typename:const std::string	access:public	signature:(Color::FontColor front,Color::BackgroundColor back)
hdgd::FontColorCode	color.cpp	/^static const char* FontColorCode[static_cast<unsigned int>(Color::FontColor::NUM_FONT_COLOR)] = /;"	v	namespace:hdgd	typeref:typename:const char * []	file:
hdgd::LogLevelName	logging.cpp	/^const char* LogLevelName[static_cast<unsigned int>(Logger::LogLevel::NUM_LOG_LEVEL)] = {$/;"	v	namespace:hdgd	typeref:typename:const char * []
hdgd::Logger	logging.h	/^class Logger {$/;"	c	namespace:hdgd
hdgd::Logger::DEBUG	logging.h	/^        DEBUG,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
hdgd::Logger::ERROR	logging.h	/^        ERROR,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
hdgd::Logger::FATAL	logging.h	/^        FATAL,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
hdgd::Logger::INFO	logging.h	/^        INFO,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
hdgd::Logger::LogLevel	logging.h	/^    enum class LogLevel$/;"	g	class:hdgd::Logger	access:public
hdgd::Logger::Logger	logging.h	/^    Logger() {}$/;"	f	class:hdgd::Logger	access:public	signature:()
hdgd::Logger::NUM_LOG_LEVEL	logging.h	/^        NUM_LOG_LEVEL,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
hdgd::Logger::TRACE	logging.h	/^        TRACE,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
hdgd::Logger::WARN	logging.h	/^        WARN,$/;"	e	enum:hdgd::Logger::LogLevel	access:public
hdgd::Logger::~Logger	logging.h	/^    ~Logger() {}$/;"	f	class:hdgd::Logger	access:public	signature:()
hdgd::NonCopy	noncopy.h	/^class NonCopy$/;"	c	namespace:hdgd
hdgd::NonCopy::NonCopy	noncopy.h	/^    NonCopy() = default;$/;"	p	class:hdgd::NonCopy	access:protected	signature:()
hdgd::NonCopy::NonCopy	noncopy.h	/^    NonCopy(const NonCopy &) = delete;$/;"	p	class:hdgd::NonCopy	access:public	signature:(const NonCopy &)
hdgd::NonCopy::operator =	noncopy.h	/^    NonCopy& operator=(const NonCopy &) = delete;$/;"	p	class:hdgd::NonCopy	typeref:typename:NonCopy &	access:public	signature:(const NonCopy &)
hdgd::NonCopy::~NonCopy	noncopy.h	/^    ~NonCopy() = default;$/;"	p	class:hdgd::NonCopy	access:protected	signature:()
hdgd::Prompt	prompt.h	/^class Prompt$/;"	c	namespace:hdgd
hdgd::Prompt::_ExitPrompt	prompt.h	/^    static void _ExitPrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
hdgd::Prompt::exitPrompt	prompt.h	/^    static void exitPrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
hdgd::Prompt::exitPromptEN	prompt.h	/^    static void exitPromptEN(int errn, const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(int errn,const char * format,...)
hdgd::Prompt::fatalPrompt	prompt.h	/^    static void fatalPrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
hdgd::Prompt::msgPrompt	prompt.h	/^    static void msgPrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
hdgd::Prompt::usagePrompt	prompt.h	/^    static void usagePrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
hdgd::__outputPrompt	prompt.cpp	/^static void __outputPrompt(bool useErr, int errn, const std::string format, va_list ap) {$/;"	f	namespace:hdgd	typeref:typename:void	file:	signature:(bool useErr,int errn,const std::string format,va_list ap)
hdgd::__terminate	prompt.cpp	/^static void __terminate(bool useExit) {$/;"	f	namespace:hdgd	typeref:typename:void	file:	signature:(bool useExit)
hdgd::initLogLevel	logging.cpp	/^static Logger::LogLevel initLogLevel() {$/;"	f	namespace:hdgd	typeref:typename:Logger::LogLevel	file:	signature:()
help	build/Makefile	/^help:$/;"	t
info_arch	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_dialect_default	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v	typeref:typename:const char *
info_language_dialect_default	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_platform	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
initLogLevel	logging.cpp	/^static Logger::LogLevel initLogLevel() {$/;"	f	namespace:hdgd	typeref:typename:Logger::LogLevel	file:	signature:()
list	what.hh	/^void list(const char *format, ...) {$/;"	f	typeref:typename:void	signature:(const char * format,...)
logging	CMakeLists.txt	/^project(logging)$/;"	p
logging.i	build/Makefile	/^logging.i:$/;"	t
logging.o	build/Makefile	/^logging.o:$/;"	t
logging.s	build/Makefile	/^logging.s:$/;"	t
main	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f	signature:(argc,argv)
main	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void	signature:()
main	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int	signature:(int argc,char * argv[])
main	tests.cpp	/^int main(int argc, const char *argv[])$/;"	f	typeref:typename:int	signature:(int argc,const char * argv[])
main	what.hh	/^int main(int argc, const char *argv[])$/;"	f	typeref:typename:int	signature:(int argc,const char * argv[])
msgPrompt	prompt.cpp	/^void Prompt::msgPrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
msgPrompt	prompt.h	/^    static void msgPrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
op	what.hh	/^    static void op() {$/;"	f	class:TT	typeref:typename:void	access:public	signature:()
operator ()	color.h	/^    const std::string operator()(const char *buf, Color::FontColor front, Color::BackgroundColor/;"	f	class:hdgd::ColorStr	typeref:typename:const std::string	access:public	signature:(const char * buf,Color::FontColor front,Color::BackgroundColor back)
operator ()	what.hh	/^    int operator()() {$/;"	f	class:TT	typeref:typename:int	access:public	signature:()
operator ()	what.hh	/^    int operator()(int i) {$/;"	f	class:TTT	typeref:typename:int	access:public	signature:(int i)
operator ()	what.hh	/^    void operator()(int i) {$/;"	f	class:TT	typeref:typename:void	access:public	signature:(int i)
operator =	noncopy.h	/^    NonCopy& operator=(const NonCopy &) = delete;$/;"	p	class:hdgd::NonCopy	typeref:typename:NonCopy &	access:public	signature:(const NonCopy &)
portion	color.cpp	/^const std::pair<const char*, const char*> Color::portion(Color::FontColor front, Color::Backgrou/;"	f	class:Color	typeref:typename:const std::pair<const char *,const char * >	signature:(Color::FontColor front,Color::BackgroundColor back)
portion	color.h	/^    static const std::pair<const char*, const char*> portion(Color::FontColor front, Color::Back/;"	p	struct:hdgd::Color	typeref:typename:const std::pair<const char *,const char * >	access:public	signature:(Color::FontColor front,Color::BackgroundColor back)
preinstall	build/Makefile	/^preinstall: all$/;"	t
preinstall/fast	build/Makefile	/^preinstall\/fast:$/;"	t
prompt.i	build/Makefile	/^prompt.i:$/;"	t
prompt.o	build/Makefile	/^prompt.o:$/;"	t
prompt.s	build/Makefile	/^prompt.s:$/;"	t
qnxnto	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	build/CMakeFiles/3.16.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
rebuild_cache	build/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	build/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
size	what.hh	/^    size_t size() {$/;"	f	class:TT	typeref:typename:size_t	access:public	signature:()
temp	what.hh	/^    char temp[10];$/;"	m	class:TTT	typeref:typename:char[10]	access:private
temp1	what.hh	/^void temp1(const char *buf) {$/;"	f	typeref:typename:void	signature:(const char * buf)
test	what.hh	/^    void test(char *s) {$/;"	f	class:T	typeref:typename:void	access:public	signature:(char * s)
test	what.hh	/^    void test(std::string s) {$/;"	f	class:T	typeref:typename:void	access:public	signature:(std::string s)
tests	CMakeLists.txt	/^add_executable(tests ${SOURCES})$/;"	t
tests	build/Makefile	/^tests: cmake_check_build_system$/;"	t
tests.i	build/Makefile	/^tests.i:$/;"	t
tests.o	build/Makefile	/^tests.o:$/;"	t
tests.s	build/Makefile	/^tests.s:$/;"	t
tests/fast	build/Makefile	/^tests\/fast:$/;"	t
toString	color.h	/^    const std::string toString(Color::FontColor front, Color::BackgroundColor back) {$/;"	f	class:hdgd::ColorStr	typeref:typename:const std::string	access:public	signature:(Color::FontColor front,Color::BackgroundColor back)
usagePrompt	prompt.cpp	/^void Prompt::usagePrompt(const char *format, ...) {$/;"	f	class:Prompt	typeref:typename:void	signature:(const char * format,...)
usagePrompt	prompt.h	/^    static void usagePrompt(const char *format, ...) NORETURN;$/;"	p	class:hdgd::Prompt	typeref:typename:void	access:public	signature:(const char * format,...)
volatile	build/CMakeFiles/3.16.4/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
~Logger	logging.h	/^    ~Logger() {}$/;"	f	class:hdgd::Logger	access:public	signature:()
~NonCopy	noncopy.h	/^    ~NonCopy() = default;$/;"	p	class:hdgd::NonCopy	access:protected	signature:()
